---
- include_vars: '{{ aws.vpc_info_file }}'
# NOTE: Setup and configure the ELBs
# - debug: var=vpc
# - debug: var=vpc.subnets

- name: Create the Load Balancer
  ec2_elb_lb:
    name: 'public-elb-{{ c.env }}'
    state: present
    region: '{{ c.region }}'
    subnets: '{{ vpc.subnet_ids }}'
    security_group_ids: '{{ vpc.security_group_ids }}'
    cross_az_load_balancing: yes
    connection_draining_timeout: 300
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
      # TODO: Setup https
      # - protocol: https
      #   load_balancer_port: 443
      #   instance_protocol: http # optional, defaults to value of protocol setting
      #   instance_port: 80
      #   # ssl certificate required for https or ssl
      #   NOTE: First, can upload the cert to IAM, using http://docs.ansible.com/ansible/iam_cert_module.html
      #   ssl_certificate_id: "arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert"
    health_check:
      ping_protocol: http # options are http, https, ssl, tcp
      ping_port: 80
      # TODO: Have it check something on the app server rather than the web server
      ping_path: '/index.html' # not required for tcp or ssl
      response_timeout: 5 # seconds
      interval: 30 # seconds
      unhealthy_threshold: 2
      healthy_threshold: 10
  register: public_elb
  when: c.elb == yes

# TODO: Separate out the Route53 to a separate playbook
# And enable it to set CNAME's to ELBs or directly to an EC2
- debug: var=public_elb

- set_fact:
    dns_host: '{{ public_elb.elb.dns_name }}'
  when: c.elb == yes

- set_fact:
    # TODO: Set the the EC2 dns name
    dns_host: '{{ public_elb.elb.dns_name }}'
  when: c.elb == no

- name: Create Route53 CNAME reocrds for ELB
  route53:
    command: create
    zone: '{{ c.domain }}.'
    record: '{{ item }}.{{ c.domain }}.'
    type: CNAME
    ttl: 60
    overwrite: yes
    # value: '{{ public_elb.elbs.0.dns_name }}'
    value: '{{ public_elb.elb.dns_name }}'
  with_items: '{{ c.hosts }}'
