# process credentials
# - credentials/terraform/default.tfvars needs to be generated
# - write the AWS CSV files into yml in ~/.aws/credentials
---
- include_vars:
    file: '{{ credentials_file }}'
    name: credentials

- set_fact:
    aws_keys: '{{ credentials.aws }}'
    git_keys: '{{ credentials.git[git_provider] }}'


### git creds
- name: Write git user info to ~/.gitconfig.user
  template:
    src: gitconfig.user.j2
    dest: '{{ git_creds_file }}'


### aws creds
- name: Ensure ~/.aws directory exists
  file:
    dest: '{{ aws_creds_dir }}'
    state: directory

- name: Template out the credentials file
  blockinfile:
    create: yes
    dest: '{{ aws_creds_dir }}/credentials'
    marker: '# {mark} {{ project_name }}'
    block: |
      {% for item in aws_keys %}
      [{{ item | replace('_', '-') }}]
      aws_access_key_id = {{ aws_keys[item].aws_access_key_id }}
      aws_secret_access_key = {{ aws_keys[item].aws_secret_access_key }}

      {% endfor %}

### terraform
# NOTE: $AWS_PROFILE is used to specify account to access the tf bucket
# The tfvars file still needs to be used to specifiy different AWS accounts for the acutal plan apply
- name: Ensure the terraform credentials directory exists
  file:
    path: '{{ tf_creds_dir }}'
    state: directory

- name: Generate tfvars for each terraform credential
  template:
    src: terraform.tfvars.j2
    dest: "{{ tf_creds_dir }}/{{ item.key.split('_')[-1] }}.tfvars"
  with_dict: '{{ aws_keys }}'
